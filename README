
igrmonty: A monte carlo code for relativistic radiative transport, 
including synchrotron emission and absorption, bremsstrahlung
emission (absorption is negligible), and compton scattering.

This version includes thermal electrons only.

For publications, please cite this journal article:
Dolence, J.C., Gammie, C.F., Moscibrodzka, M., and Leung, P.K.: 2009, ApJS 184, 387.
https://ui.adsabs.harvard.edu/abs/2009ApJS..184..387D/abstract
And this repository:
https://github.com/AFD-Illinois/igrmonty

Substantial contributions made by
Ben Ryan
George Wong
Ricardo Castro-Yarza
Chi-kwan Chan

usage: 
  HARM:    grmonty Ns fname M_unit[g] MBH[Msolar] Tp/Te
  bhlight: grmonty Ns fname

  HAMR:    grmonty Ns fname RHO_unit
           grmonty Ns fname          (when read_dscale is set to 1; RHO_unit would be read from the dataset directly for the case of non scale-free simulations (e.g., radiation or 2 temperature models)

  ## note: For reading HAMR dataset, one needs to set RHO_unit (mass density unit conversion) instead of M_unit.  (for using parameter file, see the example template "template_hamr.par")

prepped for public release
cfg 18 Apr 2020


## adding new electron distribution functions

1. add new names/parameters to src/model_radiation.h

2. add absorptivity to src/radiation.c:alpha_inv_abs(...)

3. add eDF in src/hotcross.c:dNdgammae_[X], modifying dNdgammae as appropriate

4a. modify eDF functions in src/compton.c
    - dfdgam(...)
    - fdist(...)  -- note overlap with dNdgammae in src/hotcross.c

4b. ensure src/compton.c:sample_beta_distr_num(...) produces reasonable results on edge cases

5a. implement jnu_[X] and int_jnu_[X] in src/jnu_mixed.c. it's likely the integral calls into a table

5b. modify switches in src/jnu_mixed.c  -- jnu(...), jnu_ratio_brems(...), int_jnu(...)


